Dockerhub:
registry to store docker images.

https://hub.docker.com/search?q=

Docker images:
--------------
stopped container like vm image
consists of multiple layers
An app will be bundled an image
container runs from images
images are called repo in registry


Images become containers when they run in docker engine.


DOCKER REGISTRIES:
-----------------

storage for docker images
dockerhub is a default registry 

cloud based registry are 
1.dockerhub
2.GCR ( google cont registry)
3.Amazon ECR

Inhouse or local registry
1.nexus3
2.jfrog
3.dtr (docker trusted registry)


container: is a thin read/write layer

==================================
https://hub.docker.com/_/nginx?tab=description

docker pull nginx
docker pull nginx:stable-perl

[vinodch501@instance-1-vnd ~]$ docker images
REPOSITORY    TAG           IMAGE ID       CREATED        SIZE
nginx         stable-perl   0b26ebf24738   6 days ago     188MB
nginx         latest        55f4b40fe486   6 days ago     142MB
hello-world   latest        feb5d9fea6a5   9 months ago   13.3kB



docker run --name myweb  -d nginx                 ( -d it runs on background ) without -d it runs on foreground ( run on shell)

without detachement 

->docker run nginx

=====================================================================
docker run nginx
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/06/29 16:23:03 [notice] 1#1: using the "epoll" event method


=====================================================================
https://hub.docker.com/_/nginx?tab=description

->with -d ( it runs on background not on screen )

[vinodch501@instance-1-vnd ~]$ docker run -d nginx
6f472c629795f9ba53bceb91cdd16d9cf63c2b36ba806456a15b89679df51ef3

by default nginx container will run on 80 port ,so you can map a "hostport" to access it outside world. you cannot access 
container directly
(container running on pvt network (subnet). if you want to run it on outside world you can map it to  hostport)

you can access the host on that port then it route to container.

$ docker run --name some-nginx -d -p 8080:80 some-content-nginx

portmapping or hostport

[vinodch501@instance-1-vnd ~]$ docker run --name nginx1 -d -p 7777:80 nginx                #7777:80  (7777:hostport) 80 : nginx port
6b47d4c6e15ccb8c8628e03ed2ef04e0b04cb016f9bcc9cb4caadcff10434d8a

[vinodch501@instance-1-vnd ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                   NAMES
6b47d4c6e15c   nginx     "/docker-entrypoint.…"   5 seconds ago   Up 4 seconds   0.0.0.0:7777->80/tcp, :::7777->80/tcp   nginx1

you can access outside using "VM public ip" with "hostport" exposed outside world.

eg:
http://34.125.152.130:7777/

here 

COMMAND:
"/docker-entrypoint.…"       ==> a script that runs nginx process

===============================

Stop container and check it should be in exited state.

docker stop 6b47d4c6e15c                   (6b47d4c6e15c: container id)

[vinodch501@instance-1-vnd ~]$ docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS     NAMES
6b47d4c6e15c   nginx         "/docker-entrypoint.…"   6 minutes ago    Exited (0) 59 seconds ago             nginx1
















