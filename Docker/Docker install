https://docs.docker.com/get-started/
https://docs.docker.com/

Install on CentOs
https://docs.docker.com/engine/install/centos/

Ubuntu:
https://docs.docker.com/engine/install/ubuntu/

1.sudo yum install -y yum-utils

2.sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

Install the latest version of Docker Engine, containerd, and Docker Compose or go to the next step to install a specific version:

3.sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 
4.docker -v
Docker version 20.10.17, build 100c701

5.sudo systemctl status docker

6.sudo systemctl start docker

7.sudo docker run hello-world

8.docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
 
 OR

Install specific version
========================

3.yum list docker-ce --showduplicates | sort -r

3.sudo yum install docker-ce-<VERSION_STRING> docker-ce-cli-<VERSION_STRING> containerd.io docker-compose-plugin


================================ Post-installation steps for Linux ==================================

https://docs.docker.com/engine/install/linux-postinstall/

Using non root user:

$ docker run hello-world
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.


================================== Manage Docker as a non-root user ===============================

By default that Unix socket is owned by the user root and other users can only access it using sudo. The Docker daemon 
always runs as the root user

https://docs.docker.com/engine/install/linux-postinstall/

The Docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket is owned by the user root and other users 
can only access it using sudo. The Docker daemon always runs as the root user.

If you donâ€™t want to preface the docker command with sudo, create a Unix group called docker and add users to it. When the Docker 
daemon starts, it creates a Unix socket accessible by members of the docker group.

To create the docker group and add your user:

$sudo cat /etc/group

vinodch501:x:1001:
jenkins:x:995:
docker:x:994:
cgred:x:993:

$ whoami
vinodch501

1.Create the docker group.

$sudo groupadd docker
 
2.Add your user to the docker group.

$sudo usermod -aG docker $USER
 
3.Log out and log back in so that your group membership is re-evaluated.

If testing on a virtual machine, it may be necessary to restart the virtual machine for changes to take effect.

OR

3.On Linux, you can also run the following command to activate the changes to groups:

$newgrp docker 

4.Verify that you can run docker commands without sudo.

$newgrp docker 
$ docker run hello-world

[vinodch501@instance-1-vnd ~]$ docker images

REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   9 months ago   13.3kB

5. check id of user ( it should be in docker group )

=>[vinodch501@instance-1-vnd ~]$ id vinodch501
uid=1000(vinodch501) gid=1001(vinodch501) groups=1001(vinodch501),4(adm),39(video),994(docker)


6. Try logout and login 

[vinodch501@instance-1-vnd ~]$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   9 months ago   13.3kB


Configure Docker to start on boot
====================================
Most current Linux distributions (RHEL, CentOS, Fedora, Debian, Ubuntu 16.04 and higher) use systemd to manage which services start when the system boots. On Debian and Ubuntu, the Docker service is configured to start on boot by default. To automatically start Docker and Containerd on boot for other distros, use the commands below:

1.sudo systemctl enable docker.service
2.sudo systemctl enable containerd.service


$docker rmi hello-world

Once run docker run hello-world it performs below all steps:
------------------------------------------------------------

What it's perform is "pull image from dockerhub" if not found on local  and execute all "Hello from Docker! and instructions below"
run a script that prints a message.

$[vinodch501@instance-1-vnd ~]$ docker run hello-world

Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world                               
2db29710123e: Pull complete 
Digest: sha256:13e367d31ae85359f42d637adf6da428f76d75dc9afeb3c21faea0d976f5c651
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/


[vinodch501@instance-1-vnd ~]$ docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED       STATUS                   PORTS     NAMES
c5723845f896   hello-world   "/hello"   2 hours ago   Exited (0) 2 hours ago             dreamy_buck


the output of "hello-world" message is to execute some script and dead the container 

here COMMAND : /hello

you want to archive logs and send to logging dashboard elk or splunk => its a short activity you need to have container does that work 
and stops
----------------------

https://docs.docker.com/get-started/

https://youtu.be/iqqDU2crIEQ





================================== NOTE ======================================

https://docs.docker.com/engine/install/linux-postinstall/

same as post installation stpes below 

By default you execute docker commands on "sudo user only" 

$ sudo su -

# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

Check logout from "sudo user" and execute docker commands you will get "permission denied" error.

# logout

[vinodch501@instance-1-vnd ~]$ docker ps

Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get 
"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json": dial unix /var/run/docker.sock: connect: permission denied


1. By default only "root" user can connect docker daemon in cli 
2. if you want any other user to run docker command you need to add user to that group

$sudo vi /etc/group

root:x:0:
vinodch501:x:1001:
jenkins:x:995:
docker:x:994:

you can add user directly here and save or use "usermod" command

docker:x:994:vinodch501


===========================================================================

sudo docker run hello-world

O/P:

[root@instance-1-vnd ~]# docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete 
Digest: sha256:13e367d31ae85359f42d637adf6da428f76d75dc9afeb3c21faea0d976f5c651
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

[root@instance-1-vnd ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


[root@instance-1-vnd ~]# docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   9 months ago   13.3kB

========================================

debian:
https://docs.docker.com/engine/install/debian/

https://docs.docker.com/engine/install/rhel/

https://docs.docker.com/engine/install/ubuntu/






