https://docs.docker.com/

Install on CentOs
https://docs.docker.com/engine/install/centos/

1.sudo yum install -y yum-utils

2.sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

Install the latest version of Docker Engine, containerd, and Docker Compose or go to the next step to install a specific version:

3.sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 
docker -v
Docker version 20.10.17, build 100c701
 
 OR

Install specific version
========================

yum list docker-ce --showduplicates | sort -r

sudo yum install docker-ce-<VERSION_STRING> docker-ce-cli-<VERSION_STRING> containerd.io docker-compose-plugin

4.sudo systemctl status docker

5.sudo systemctl start docker

6.sudo docker run hello-world

7.docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE



================================ Post-installation steps for Linux ==================================

https://docs.docker.com/engine/install/linux-postinstall/

Using non root user:

$ docker run hello-world
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.



================================== Manage Docker as a non-root user ===============================

By default that Unix socket is owned by the user root and other users can only access it using sudo. The Docker daemon 
always runs as the root user

https://docs.docker.com/engine/install/linux-postinstall/

The Docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket is owned by the user root and other users 
can only access it using sudo. The Docker daemon always runs as the root user.

If you donâ€™t want to preface the docker command with sudo, create a Unix group called docker and add users to it. When the Docker 
daemon starts, it creates a Unix socket accessible by members of the docker group.

To create the docker group and add your user:

$sudo cat /etc/group

vinodch501:x:1001:
jenkins:x:995:
docker:x:994:
cgred:x:993:

$ whoami
vinodch501

1.Create the docker group.

$sudo groupadd docker
 
2.Add your user to the docker group.

$sudo usermod -aG docker $USER
 
3.Log out and log back in so that your group membership is re-evaluated.

If testing on a virtual machine, it may be necessary to restart the virtual machine for changes to take effect.

OR

3.On Linux, you can also run the following command to activate the changes to groups:

$newgrp docker 

4.Verify that you can run docker commands without sudo.

$newgrp docker 
$ docker run hello-world

[vinodch501@instance-1-vnd ~]$ docker images

REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   9 months ago   13.3kB

5. check id of user ( it should be in docker group )

=>[vinodch501@instance-1-vnd ~]$ id vinodch501
uid=1000(vinodch501) gid=1001(vinodch501) groups=1001(vinodch501),4(adm),39(video),994(docker)


6. Try logout and login 

[vinodch501@instance-1-vnd ~]$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   9 months ago   13.3kB


Configure Docker to start on boot
====================================
Most current Linux distributions (RHEL, CentOS, Fedora, Debian, Ubuntu 16.04 and higher) use systemd to manage which services start when the system boots. On Debian and Ubuntu, the Docker service is configured to start on boot by default. To automatically start Docker and Containerd on boot for other distros, use the commands below:

1.sudo systemctl enable docker.service
2.sudo systemctl enable containerd.service
