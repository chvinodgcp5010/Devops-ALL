################################################### SONARQUBE SETUP (ubuntu18) ###################################################

Instance type: t2.medium

secuirty group:

ssh         22              myip
http        80              anywehre
cutom tcp 9000              anywhere


https://docs.sonarqube.org/latest/setup/get-started-2-minutes/

consists "sonarqube" "postgres" "nginx"



============================= COMMANDS =================================
#!/bin/bash

cp /etc/sysctl.conf /root/sysctl.conf_backup

cat <<EOT> /etc/sysctl.conf
vm.max_map_count=262144
fs.file-max=65536
ulimit -n 65536
ulimit -u 4096
EOT


cp /etc/security/limits.conf /root/sec_limit.conf_backup

cat <<EOT> /etc/security/limits.conf
sonarqube   -   nofile   65536
sonarqube   -   nproc    409
EOT


sudo apt-get update -y
sudo apt-get install openjdk-11-jdk -y
sudo update-alternatives --config java
java -version
sudo apt update

wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
sudo apt install postgresql postgresql-contrib -y
#sudo -u postgres psql -c "SELECT version();"
sudo systemctl enable postgresql.service
sudo systemctl start  postgresql.service

sudo echo "postgres:admin123" | chpasswd
runuser -l postgres -c "createuser sonar"
sudo -i -u postgres psql -c "ALTER USER sonar WITH ENCRYPTED PASSWORD 'admin123';"
sudo -i -u postgres psql -c "CREATE DATABASE sonarqube OWNER sonar;"
sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sonarqube to sonar;"

systemctl restart  postgresql
#systemctl status -l   postgresql
netstat -tulpena | grep postgres
sudo mkdir -p /sonarqube/

--------------

NOTE:

sonarqube website:
-> downloads
-> on bottom will get long term support 
->Download SonarQube 8.9.8 LTS
->copy url ( https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.8.54436.zip )
-------------

cd /sonarqube/                            
sudo curl -O https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.3.0.34182.zip
sudo apt-get install zip -y
sudo unzip -o sonarqube-8.3.0.34182.zip -d /opt/
sudo mv /opt/sonarqube-8.3.0.34182/ /opt/sonarqube

sudo groupadd sonar
sudo useradd -c "SonarQube - User" -d /opt/sonarqube/ -g sonar sonar
sudo chown sonar:sonar /opt/sonarqube/ -R
cp /opt/sonarqube/conf/sonar.properties /root/sonar.properties_backup


cat <<EOT> /opt/sonarqube/conf/sonar.properties
sonar.jdbc.username=sonar
sonar.jdbc.password=admin123
sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube
sonar.web.host=0.0.0.0
sonar.web.port=9000
sonar.web.javaAdditionalOpts=-server
sonar.search.javaOpts=-Xmx512m -Xms512m -XX:+HeapDumpOnOutOfMemoryError
sonar.log.level=INFO
sonar.path.logs=logs
EOT


cat <<EOT> /etc/systemd/system/sonarqube.service
[Unit]
Description=SonarQube service
After=syslog.target network.target
[Service]
Type=forking
ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
User=sonar
Group=sonar
Restart=always
LimitNOFILE=65536
LimitNPROC=4096
[Install]
WantedBy=multi-user.target
EOT


systemctl daemon-reload
systemctl enable sonarqube.service
#systemctl start sonarqube.service
#systemctl status -l sonarqube.service
apt-get install nginx -y
rm -rf /etc/nginx/sites-enabled/default
rm -rf /etc/nginx/sites-available/default


cat <<EOT> /etc/nginx/sites-available/sonarqube
server{
    listen      80;
    server_name sonarqube.groophy.in;
    access_log  /var/log/nginx/sonar.access.log;
    error_log   /var/log/nginx/sonar.error.log;
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;
    location / {
        proxy_pass  http://127.0.0.1:9000;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;
              
        proxy_set_header    Host            \$host;
        proxy_set_header    X-Real-IP       \$remote_addr;
        proxy_set_header    X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto http;
    }
}
EOT


ln -s /etc/nginx/sites-available/sonarqube /etc/nginx/sites-enabled/sonarqube
systemctl enable nginx.service
#systemctl restart nginx.service
sudo ufw allow 80,9000,9001/tcp
echo "System reboot in 30 sec"
sleep 30
reboot


###################### Sonar-analysis properties ######################


sonar.projectKey=vprofile
sonar.projectName=vprofile-repo
sonar.projectVersion=1.0
sonar.sources=src/
sonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
sonar.junit.reportsPath=target/surefire-reports/
sonar.jacoco.reportsPath=target/jacoco.exec
sonar.java.checkstyle.reportPaths=target/checkstyle-result.xml


https://medium.com/@amitvermaa93/jenkins-sonarqube-integration-129f5c49c4ca

Code analysis:

Detects vulnerabilities and functional errors.

Why Code analysis?

1.Best practices:
checks the code against best practices and flag the problems , which can be fixed by dev.

2.vulnerabilities:
----------------
check vulnerabilities in code

3.looks for bugs
4.functional errors before deployment

Code analysis:
variety of test performed on the code.

Various code analysis tools:
---------------------------
checkstyle
coberture
mstest
owasp
sonarqube scanner

================================== Jenkins with sonarqube =======================================
https://medium.com/@amitvermaa93/jenkins-sonarqube-integration-129f5c49c4ca


1.first install sonarqube then integrate with jenkins.
2. install sonarscanner on jenkins

install sonar plugin
====================

Jenkins --> Globaltool configuration --> goto "SonarQube Scanner" --> add name "sonar-4.7" 
click on -> install automatically and version as "sonarqbe-scanner-4.7" and save

Once sonarscanner is added to jenkins 

Goto
-> jenkins -> configure system -> Add sonarqube server ip details and save.

Configure system --> SonarQube servers -->


SonarQube installations
->Name: sonarqube_server
->SERVER URL: http://**.***.**.**:9000/
->Server authentication token : 
Once copy token click on add , if add button is not work click on save and try again

Click on --> add --> Jenkins (credentials provider)

kind: "secret text"
secret: "copy secret from sonarqube and paste"
ID: jenkins-sonar-key    ( any name )

click on add and Server authentication token : "jenkins-sonar-key"


=========================================================================================
(for token --> goto "sonarqube server" click on right end user: "administrator"  --> Myaccount -->security --> Name the token 
"jenkins-sonar-token" want to create

-> create token)

Copy token
8373685c6d937be34354a45454553258505f9ab
=========================================================================================


OUTPUT:

Integrated sonarqube server with jenkins and setup "sonarscanner" tool

next step :

add sonarqube details on pipeline and test


























