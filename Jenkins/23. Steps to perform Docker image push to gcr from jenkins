======================================== ALL STEPS NEED TO PERFORM ====================================================

Docker CI in jenkins

1.Install docker engine in jenkins
2. add jenkins user to docker group and reboot
  
3. Intsall aws cli                        --> it will use for cont delivery stage (deliver the artifact it will use)
4. Create IAM user 
5. Create ECR repo

6.Plugins:
  Ecr,docker pipeline, aws sdk for credentials
  
-> Store aws credentials in jenkins
-> Run pipeline



======================================================================================
1.Install docker engine in jenkins

search for docker install on browser ---> click on ubuntu

https://docs.docker.com/engine/install/ubuntu/


sudo apt-get update

sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
 
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin


docker --version
Docker version 20.10.16, build aa7e414

    
 ======================================================================================   
  
2. Add jenkins user to docker group and reboot

root@ip-172-31-93-221:~# id jenkins
uid=111(jenkins) gid=115(jenkins) groups=115(jenkins)

root@ip-172-31-93-221:~# usermod -a -G docker jenkins

root@ip-172-31-93-221:~# id jenkins
uid=111(jenkins) gid=115(jenkins) groups=115(jenkins),999(docker)


->reboot or restart vm 
jenkins user is now part of docker group inorder to load reboot the machine.


==========================================================

4. Create IAM user ( and assign "ec2 container registry full access")  -->optional  (ecs full access) ecs is the container service from aws .
deliver docker images to ecs service , in future we use ecs ---> so now adding now 

->user:  ecrfull_user
->Select AWS credential type -> Programmatic access
->attach existing policy: AmazonEC2ContainerRegistryFullAccess 
->AmazonECS_FullAccess


create

download csv keys

AKIAUMHZDA7YS5J7ZAFH
PjqBy+YHYQqa6C0SQrJIRUCRJ+cIxEPH8DHD1YBU

================================================

5. Create ECR repo

visibility settings : private
Repository name: dataweave-vnd

click on create repository


================================================

6.Install Plugins:
  docker pipeline
  aws ecr
  aws sdk (for credentials)
  cloudbees docker build and publish
  

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
