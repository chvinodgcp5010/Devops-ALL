pipeline {
    agent any
    environment {
        registryCredential = 'ecr:us-east-1:awscreds'                                      //awscreds --> manage credentials added in jenkins ( aws keys), us-east-1 --> region
        appRegistry = "301170100209.dkr.ecr.us-east-1.amazonaws.com/dataweave-vnd"         //ecr registry/registry name
        vprofileRegistry = "https://301170100209.dkr.ecr.us-east-1.amazonaws.com"          //ecr registry
    }
  stages {
    stage('Fetch code'){
      steps {
        git branch: 'docker', url: 'https://github.com/devopshydclub/vprofile-project.git'
      }
    }


    stage('Test'){                                                                            //here there is no build in maven this will perform in docker stage.
      steps {
        sh 'mvn test'
      }
    }

    stage ('CODE ANALYSIS WITH CHECKSTYLE'){
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
            post {
                success {
                    echo 'Generated Analysis Result'
                }
            }
        }

        stage('build && SonarQube analysis') {
            environment {
             scannerHome = tool 'sonar-4.7'
          }
            steps {
                withSonarQubeEnv('sonarqube_server') {
                 sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile-repo \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
                }
            }
        }

        //stage("Quality Gate") {
            //steps {
                //timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                   //waitForQualityGate abortPipeline: true
                //}
            //}
        //}

    stage('Build App Image') {
       steps {
       
         script {
                dockerImage = docker.build( appRegistry + ":$BUILD_NUMBER", "./Docker-files/app/multistage/")
             }

     }
    
    }

    stage('Upload App Image') {
          steps{
            script {
              docker.withRegistry( vprofileRegistry, registryCredential ) {
                dockerImage.push("$BUILD_NUMBER")
                dockerImage.push('latest')
              }
            }
          }
     }

  }
}


//Here mvn install and all performing in container level not in jenkins level. artifact put in docker image 
//check in gcr --> images 
//pull images and metnioning the corect tags and deploy in differenet environments .k8s ,docker 

//next how to deliver the image to container run time enviornment -->dockerize the app ---> continuos delivery.





























