user == >nodeip:nodeport =>Node (nodeip)(nodeport)---> service (nodeport) ---->100.34.54.34:80 (fontend port) --> backendport(80)

backendport(targetPort) in service must match to (containerPort) in deployment file.

Frontend you can give any port (port: 9090) any port . 

(in yaml)

port : 9090                      (frontendport you can give any port) frontend port(internal) but you cannot access outside.( node port for outside n/w)
tartgetPort: 80                 (but backend port must match with container port)

NOTE:
=====
If you know pod label and container port --> it can easily write service yaml


============================== Deployment yaml ===========================

apiVersion: v1
kind: Pod
metadata:
  name: vproapp-pod
  labels:
    app: vproapp
spec:
  containers:
  - name: vproapp-cont
    image: imranvisualpath/freshtomapp:V7
    ports:
     - name: vproapp-port
       containerPort: 8080

============================== Service yaml ===========================
https://kubernetes.io/docs/concepts/services-networking/service/

apiVersion: v1
kind: Service
metadata:
  name: vproapp-servoce
spec:
 selector: 
   app: vproapp
 ports:
  - protocol: TCP                             #not mandatory
    port: 9090                                #(frontend port (internal only) give any port, we can access only from nodeport only
    targetPort: vproapp-port                  #8080 also good (vproapp-port provided same on deployment)#(backend port must match with container port in deployment yaml)
    nodePort: 30001                           #Not mandatory (if not given k8s will give automcatically (range 30,000-32000))
 type: NodePort


=============== OR ==================

apiVersion: v1
kind: Service
metadata:
  name: vproapp-servoce
spec:
 selector: 
   app: vproapp
 ports:
  - protocol: TCP               #not mandatory
    port: 9090                  #(frontend port (internal only) give any port, we can access only from nodeport only
    targetPort: 8080            #(backend port must match with container port in deployment yaml)
    nodePort: 30001             #Not mandatory (if not given k8s will give automcatically (range 30,000-32000))
 type: NodePort


========================================================
->kubectl get svc
vproapp-servoce   NodePort    10.48.11.186  9090:30001/TCP   ### (9090: internal frontend and 30001 ->exoternal frontendport)

->kubectl get po -o wide
vproapp-pod   1/1     Running   0          17s   10.44.0.17

->kubectl describe svc vproapp-servoce
Endpoints:                10.44.0.17:8080                   #pod ip using label selector automatically discovered and mapped


ACCESS USING :
===============
NODEIP:NODEPORT                ## you can give any node ip of cluster (if suppose have 3 nodes in cluster) you can access any ip of node.
34.133.21.126:30001/


============================ Official documentation ==========================

apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  type: NodePort
  selector:
    app: MyApp
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 80
      targetPort: 80
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      nodePort: 30007
