https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
https://kubernetes.io/docs/concepts/configuration/secret/

# Encode text
echo -n "admin" | base64                                          #YWRtaW4=
echo -n "mysecretpass" | base64                                   #bXlzZWNyZXRwYXNz

====================================== SECRET YAML FILE =============================

# Create Secret

vim mysecret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: mysecret
data:
  username: YWRtaW4=
  password: bXlzZWNyZXRwYXNz
type: Opaque

======================================== POD YAML FILE ===========================

kubectl create -f mysecret.yaml

# Create Pod to read secret keys

vim readsecret.yaml

apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
spec:
  containers:
  - name: mycontainer
    image: redis
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: username
            optional: false # same as default; "mysecret" must exist # and include a key named "username"
                            
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: password
            optional: false # same as default; "mysecret" must exist  # and include a key named "password"
                         
  restartPolicy: Never

===================================================================

kubectl create -f readsecret.yaml
kubectl get pod

=>if you provide encryption also in pod yaml it will store as "plain text" in kubernetes pod

$ kubectl exec -it secret-env-pod /bin/sh

# echo $SECRET_USERNAME
admin
# echo $SECRET_PASSWORD
mysecretpass

# Login to Pod echo print variables
kubectl exec --stdin --tty secret-env-pod -- /bin/bash
