https://kubernetes.io/docs/concepts/workloads/controllers/job/
https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/

JOB is basically container that has specific command or script that runs and complete at specific time unlike cont container like 
(nginx)

command: it could be a script or commnad.

This is like pod , but job will run specific time and pod will run continuously

Job :
=====
apiVersion: batch/v1
kind: Job
metadata:
  name: pi
spec:
  template:
    spec:
      containers:
      - name: pi
        image: perl:5.34
        command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]
      restartPolicy: Never
  backoffLimit: 4
  
  ==============
  
          6d4h
vinodch501@cloudshell:~ (geometric-sled-348110)$ kubectl get po

NAME             READY   STATUS      RESTARTS   AGE
pi-x7v76         0/1     Completed   0          32s
secret-env-pod   1/1     Running     0          6d4h

vinodch501@cloudshell:~ (geometric-sled-348110)$ kubectl logs pi-x7v76

3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609
5505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669
23460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951
94151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308
60213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214
684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597

  
  
CRONJOB:
=======
https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/

runs at specific interval

A CronJob creates Jobs on a repeating schedule.
One CronJob object is like one line of a crontab (cron table) file. It runs a job periodically on a given schedule, written in Cron format.
All CronJob schedule: times are based on the timezone of the kube-controller-manager.  

CronJobs are meant for performing regular scheduled actions such as backups, report generation, and so on. 
Each of those tasks should be configured to recur indefinitely (for example: once a day / week / month); you can define the point 
in time within that interval when the job should start.

Example

Example
This example CronJob manifest prints the current time and a hello message every minute:

application/job/cronjob.yaml 

apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
          restartPolicy: OnFailure











  
  
