https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/

Kubeconfig:
===========

Organizing Cluster Access Using kubeconfig Files

->Use kubeconfig files to organize information about ""clusters, users, namespaces, and authentication mechanisms"".

->The kubectl command-line tool uses kubeconfig files to find the information it needs to choose a cluster and communicate with the API 
server of a cluster.

Note: A file that is used to configure access to clusters is called a kubeconfig file. This is a generic way of referring to 
configuration files. It does not mean that there is a file named kubeconfig.


WHEN I EXECUTING KUBECTL COMMAND
Q) HOW KUBECTL CONNECT TO KUBERNETES CLUSTER?
==============================================

How does it know where is My master node?
How does it get authenticated and get that information from the cluster or create info from cluster?

Sol: Kubeconfig

When you create k8s cluster we get a file called "kubeconfig" file

kubeconfig file consists:
=========================
1.clusters                  : Used to access cluster information 
2.Users                     : used to access clusters
3.Namespaces
4.Authentcation mechanism

Ex:
when you want to ssh to vm you need "username" or "pwd" or access key like kubectl need "cluster info" "userinfo" "namespace" and "authentication info"

it has multiple cluster info and users info and context:

context:
This particular cluster has access this user to login.


=========================== where it will store this config file =========================

cat .kube/config

#ls -a
#cd .kube
#cat config

=========================================================================================


======================== Sample kubeconfig file: .kube/config ========================

apiVersion: v1
kind: Config

proxy-url: https://proxy.host:3128

clusters:
- cluster:
  name: development
users:
- user:
  name: developer
contexts:
- context:
  name: development


=============================== Sample kubeconfigfile ==================================

apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: ertyujkhgfghjkllkjhgfdgjjhgfdgnmlZaHNXZ3pRazNHb0cvak03b2YycnIzSTFnVWhiWkptMHE2Sk0KZUpiOEI5elg4ZS9mOTd3WGpjY2h3UW1ZQWxlVHZ5UFVFRTkrUkhkdjZjRWthVEQ2c0RTZUNyaXViaUZpd2ZQNAp0Z3ZXVlNrKzhtNWx5Q1FqSmNXalJ4blpDMUtETkV0T3hpWWNoMFFjbWRZbmVRS0xZdjROL3RJSVptaUErNFMvCjRqSGlEYjRQQnFyM3cyemErZTMwSllVYTNxS1RmcExsamFCNHNtcmhNRUFIOHVSMnZESm5SWFgyMlRyeWNNbVgKVE5ZcGEwakhuODZpWmMycjJZWEoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://36.65.167.17
  name: gke_icrack-1652018_us-central1-a_test
- cluster:
    certificate-authority-data: HfygehdejdoejdoejejdoejdefdJV3dsR2N0S1I5Ckl4ZXJPUVc2OXJ0T3FsN3krZklvZHJJS0h3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV0S08xMm9CcHprRkt5d0pLclhpTmsyQVdVNXd3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFFOWRGaTI1Q2J0L1VjeWtYbFVEUUFvSGpMZGljL1BXNEQxT084R0RCaDl4CnhwQzlKaWk1alBvMld1cU9YdHRLVkdRWlFINzVSQWRiSFNuSlR6ZGxDNVNHSkVOSmxQMWMzVkUrVkJYbkp6MlgKNnNnWU1Sb1Z6bldIb3gwZU5FRjQyeWZ1ZkROL0JzL2YvTGhVQUZFbUNVdm5FZG1NcSsrbUhDelZrcU1FVlZlLwpTRG9QTWd2NWdvV3NvWmFMRnU2RUdyNDIwc2t6elBIWmVldzNvakxwc0lHT2NwMFdaVFIvWmtYOVFyV3JiU21pClZlZ3FWNTNyVHEwMUVTbnBUWlQ2c2tKdjdjOFUyMGpxQjh6aW94S0lNcHhYT25HU1Q2VEdyL0tKWFo2Z3VDZHMKL2dqVnZNNjRRVXU0aUJDRlQxSnoyYnA3V1Fnd3RPTmVURHhIeGQvdHltY0NBaG5xLzNDQURReXIwN1VnaGNuNgpRVnBaejRQb1cyK0h1cmYwVE9OeDErS2EyMERvWS9VRzQxV0E3Wk5NL1lOZTMrdGR1SGVKQllHempSYUtKV2V5CnplcWZpcjJFYjhhVUMzU294WkJMOHd6cTNrZzd1WXAyVGdWeHRRMnVwL01PajFPTFIvNmpwTFlLSFVFVi9EN3QKMmhKcjJOUjFKVWpSaWZ3dEJFWEV2dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://34.26.26.9
  name: gke_icrack-1652018_us-central1-a_test-clone
- cluster:
    certificate-authority-data: ERHhhhjkdkbhkdbjcbdjfnkfdkfnkncESlFvUWw5MGZRdk9sZHFQOUpLakcvWXNTV2NXalNvbXRyCk0ycWk4dldoRVYyUUdwM2xxQzJ0ajBUN2NPUUdYbnhHZis3N1pzaDNvcS94cGNzSW5peXgwcDR6R05WemhGdW4KUkZib1NaczJFRXNwNGZ6MmdmNFlJcU5QekNneE43WEp6cTVPTEdLNEJXcXdDcTVLeHg5RUlDc1dkNEJPUEp6WQpVN05ia2dQVmhQYjVyekdERjExQkpDeS9YQ1ZCdmw0MU9zK3BudEMrN1l6NDI3NGhEY0E0R0ViQi9mbWRSSTZ1Ck1QdWs5SGMwS25sVXAyOFY0MGxqR2UvYjZRZmQ5dDExZWZQczcramtGcUliOG1UK04wMXdrcHNsTS9WNHJRQkYKd1ZsVThWZE03RkJNUzJjbk9VNksKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://34.17.12.47
  name: gke_icrack-1652018_us-west1-a_itrack-dev


contexts:
- context:
    cluster: gke_icrack-162345_us-central2-a_test
    user: gke_icrack-162345_us-central2-a_test
  name: gke_icrack-162345_us-central2-a_test
- context:
    cluster: gke_icrack-162345_us-central2-a_test-clone
    user: gke_icrack-162345_us-central2-a_test-clone
  name: gke_icrack-162345_us-central2-a_test-clone
- context:
    cluster: gke_icrack-162345_us-central2-a_itrack-dev
    user: gke_icrack-162345_us-west1-a_itrack-dev
  name: gke_icrack-162345_us-west1-a_itrack-dev

current-context: gke_icrack-162345_us-central2-a_icrack-dev
kind: Config
preferences: {}
users:
- name: gke_icrack-162345_us-central2-a_test
  user:
    auth-provider:
      config:
        access-token: ya29.A0ARrdaM9eqanEIeWTVzL90XtpCh9R403K1vHX2YgZRdKz1o2zlMecZvRVSQG0hYBY7XMnsJRskls-FpPVeGaIIlauDhtDlceE904olcmmljJgsz89QM0r1BQdLwF62pJmFpBm7IuaL-9h1PkS5BGr4eMGEek4EGxeRNJK6H9lCRvzpp1u4k1hm3VyC3x0IPcmcgxuhKLAF-O7M2dmePJvT8Bc30u-p9xnFU6EEE2dnifjSBT4DZ8w2bmq34pdmpCx9zdW-ubRBA
        cmd-args: config config-helper --format=json
        cmd-path: /usr/lib/google-cloud-sdk/bin/gcloud
        expiry: '2022-02-28T12:49:08Z'
        expiry-key: '{.credential.token_expiry}'
        token-key: '{.credential.access_token}'
      name: gcp
- name: gke_icrack-162345_us-central2-a_test-clone
  user:
    auth-provider:
      config:
        access-token: ya29.a0ARrdaM8kTAXLoNoNbUB8-8970XoethKXaoLTKrmiUMvbHbuqiGG11aXcyudZdN-wabJsUe2TsxedXIj-JFtKmVmD7_-MGYO_xiVim6_BXIXzyYPdRTr1FZAU6fh6JBEfkyGaeoclf2iVh1z49e1LT7OVQlJEqCCpAJI8UZwG7fkk_Yb6lc8J3HkK5Okv-2tB8K9TOf3YUH6xtSkGZ46RmHszVYrIadVk5W2zzfZDVDC7Ma1uOFeokMMa3oP_uvf3Fno-GymZfA
        cmd-args: config config-helper --format=json
        cmd-path: /usr/lib/google-cloud-sdk/bin/gcloud
        expiry: '2021-07-28T10:35:21Z'
        expiry-key: '{.credential.token_expiry}'
        token-key: '{.credential.access_token}'
      name: gcp
- name: gke_icrack-162345_us-west2-a_itrack-dev
  user:
    auth-provider:
      config:
        cmd-args: config config-helper --format=json
        cmd-path: /usr/lib/google-cloud-sdk/bin/gcloud
        expiry-key: '{.credential.token_expiry}'
        token-key: '{.credential.access_token}'
      name: gcp


==============================

kubeconfig file consists:
=========================
1.cluster info
2.Users info
3.Namespaces
4.Authentcation mechanism

Kubeconfig:
===========
it has multiple cluster info and users info and context:

context:
Tells This particular cluster use this user to login 

========================== cluster info ========================
- cluster:
    certificate-authority-data: HfygehdejdoejdoejejdoejdefdJV3dsR2N0S1I5Ckl4ZXJPUVc2OXJ0T3FsN3krZklvZHJJS0h3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV0S08xMm9CcHprRkt5d0pLclhpTmsyQVdVNXd3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFFOWRGaTI1Q2J0L1VjeWtYbFVEUUFvSGpMZGljL1BXNEQxT084R0RCaDl4CnhwQzlKaWk1alBvMld1cU9YdHRLVkdRWlFINzVSQWRiSFNuSlR6ZGxDNVNHSkVOSmxQMWMzVkUrVkJYbkp6MlgKNnNnWU1Sb1Z6bldIb3gwZU5FRjQyeWZ1ZkROL0JzL2YvTGhVQUZFbUNVdm5FZG1NcSsrbUhDelZrcU1FVlZlLwpTRG9QTWd2NWdvV3NvWmFMRnU2RUdyNDIwc2t6elBIWmVldzNvakxwc0lHT2NwMFdaVFIvWmtYOVFyV3JiU21pClZlZ3FWNTNyVHEwMUVTbnBUWlQ2c2tKdjdjOFUyMGpxQjh6aW94S0lNcHhYT25HU1Q2VEdyL0tKWFo2Z3VDZHMKL2dqVnZNNjRRVXU0aUJDRlQxSnoyYnA3V1Fnd3RPTmVURHhIeGQvdHltY0NBaG5xLzNDQURReXIwN1VnaGNuNgpRVnBaejRQb1cyK0h1cmYwVE9OeDErS2EyMERvWS9VRzQxV0E3Wk5NL1lOZTMrdGR1SGVKQllHempSYUtKV2V5CnplcWZpcjJFYjhhVUMzU294WkJMOHd6cTNrZzd1WXAyVGdWeHRRMnVwL01PajFPTFIvNmpwTFlLSFVFVi9EN3QKMmhKcjJOUjFKVWpSaWZ3dEJFWEV2dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://34.26.26.9
  name: gke_icrack-1652018_us-central1-a_test-clone

Here:

server: https://34.26.26.9                            ====> Master node API server url  (IP address of master node)
name: gke_icrack-1652018_us-central1-a_test-clone     ====> cluster name 


========================== User info =================================
- name: gke_geometric-sled-348110_us-central1-c_tcscluster
  user:
    auth-provider:
      config:
        access-token: ya29.a0ARrdaM_SurQYve7jrS6DohlVFig4HcRbbNunw-ekYtmWbwEuv_6KLnHlckDvJ6jQNH9eyHHd_E3cO0od5RmfTQVCXXKd0ayQr69j8zoT-zxRp5gJ18WrYN37W8KrsVpKvMFLVt7knvICL3a_QJNvf74ki52Ohl_yZlTh8SW7aDU80ZscJDxd-HgCkU-CE1KvBMgfD3jWYFVdEV1eLvJ2HZsFRxyqBejdzu-8ZP7fSgbCHiqUfSGfS8j7HkE_CliD6BotBQ
        cmd-args: config config-helper --format=json
        cmd-path: /usr/lib/google-cloud-sdk/bin/gcloud
        expiry: "2022-06-16T05:35:54Z"
        expiry-key: '{.credential.token_expiry}'
        token-key: '{.credential.access_token}'
      name: gcp


In order to authenticate user to cluster we need access keys / token (like ssh we have user name and login ky)similar to that


Note:

We can have multiple cluster info ,user info , context info

========================== context info ================================

contexts:
- context:
    cluster: gke_geometric-sled-348110_us-central1-a_dataweave
    user: gke_geometric-sled-348110_us-central1-a_dataweave
  name: gke_geometric-sled-348110_us-central1-a_dataweave
- context:
    cluster: gke_geometric-sled-348110_us-central1-c_tcscluster
    user: gke_geometric-sled-348110_us-central1-c_tcscluster
  name: gke_geometric-sled-348110_us-central1-c_tcscluster
current-context: gke_geometric-sled-348110_us-central1-c_tcscluster



By default if you run kubectl it will run in to the "current context" if you want you can change using kubectl


https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/


The kubectl command-line tool uses kubeconfig files to find the information it needs to choose a cluster and communicate 
with the API server of a cluster.

To see your configuration, enter this command:

kubectl config view

By default it will connect to .kube/config file , if you want to update you need to mention flag 
If the --kubeconfig flag is set, use only the specified file. Do not merge. Only one instance of this flag is allowed.


===================================
NOTE:

WITHOUT KUBECONFIG FILE KUBECTL IT WILL NOW KNOW WHERE TO GET THE DATA.


Tried to delete config while taking backup of data

Before deleting .kube/config

kubectl get po
W0616 04:45:58.676006    1269 gcp.go:120] WARNING: the gcp auth plugin is deprecated in v1.22+, unavailable in v1.25+; use gcloud instead.
To learn more, consult https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke
NAME                        READY   STATUS              RESTARTS   AGE
postgres-67558596bd-vw5lk   0/1     ContainerCreating   0          7s

vinodch501@cloudshell:~ (geometric-sled-348110)$ cd .kube/

vinodch501@cloudshell:~/.kube (geometric-sled-348110)$ ls
cache  config

vinodch501@cloudshell:~/.kube (geometric-sled-348110)$ rm -rf config

vinodch501@cloudshell:~/.kube (geometric-sled-348110)$ kubectl get po
The connection to the server localhost:8080 was refused - did you specify the right host or port?


Note:

After deleting config file getting below response

kubectl get po
The connection to the server localhost:8080 was refused - did you specify the right host or port?


Simply delete the file and check we will get above response 

add config file and try 

vi config

vinodch501@cloudshell:~/.kube (geometric-sled-348110)$ kubectl get po           
W0616 04:49:24.706540    1340 gcp.go:120] WARNING: the gcp auth plugin is deprecated in v1.22+, unavailable in v1.25+; use gcloud instead.
To learn more, consult https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke
NAME                        READY   STATUS             RESTARTS      AGE
postgres-67558596bd-vw5lk   0/1     CrashLoopBackOff   5 (21s ago)   3m33s



















