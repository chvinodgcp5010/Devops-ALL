https://kubernetes.io/docs/concepts/workloads/pods/

Pod is the basic execution unit of k8s application
The smallest and simplest unit of k8s object model that you create or deploy
Pod represents process running on your cluster

Pod that runs a single container:
================================
1 container per pod --> most common k8s use case
2 container per pod also but 2nd container will be only "helper container"

Pod is a wrapper around your single container
K8s manages the pods ratherthan contianer directly

Multi-container pod:
====================
Tightly coupled and need to share resources 
1 main container and other as "sidecar" or "helper" or "init container"
Each pod is meant to run a single instance of an appn
should use multiple pods to scale harizontally.


docker compose is better to run container than docker run 

======================== Pod definition ==========================

apiVersion:
kind: 
metadata:              ## info about pod (like name) and labels, key and value pair and tags  ( dictionary form -->metadata)
  

spec:                  ## pod definition file.


 
============================== POD YAML FILE ==================================

apiVersion: v1
kind: Pod
metadata:
  name: vproapp
  labels:
    app: vproapp
spec:
 containers: 
  - name: vproapp-container
    image: nginx                          #image: imravisualpath/freshtomapp:v7
    ports:
     - name: vproapp-port
       containerPort: 80                  #image: 8080  ( port number of container exposed on dockerfile )


==============================================================
https://hub.docker.com/u/imranvisualpath


apiVersion: v1
kind: Pod
metadata:
  name: vproapp
  labels:
    app: vproapp
spec:
 containers:
  - name: vproapp-container
    image: imranvisualpath/freshtomapp:V7
    ports:
     - name: vproapp-port
       containerPort: 8080 
       
       
#https://hub.docker.com/layers/freshtomapp/imranvisualpath/freshtomapp/V7/images/sha256-ac3e47cf94e016125f34773a2827c0afc7fd6a341e81d2e940267018d57c4a59?context=explore
In dockerfile exposed applicaton port as 8080 same need to provide on containerport.

==============================   ==============================

kubectl apply -f nginx.yml
kubectl get po
kubectl describe po <podname>

O/p:

Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  18s   default-scheduler  Successfully assigned default/vproapp to gke-tcscluster-default-pool-0decad12-3j2v
  Normal  Pulled     17s   kubelet            Container image "imranvisualpath/freshtomapp:V7" already present on machine
  Normal  Created    17s   kubelet            Created container vproapp-container
  Normal  Started    17s   kubelet            Started container vproapp-container
  
  
Here:

Scheduler:
-> will schedule the pod on to specific node 

kubelet: 
-> kubelet is performing all actions 
  ->pull images -> Create container and Start container 
-> kubelet:
      make sure run the containers inside the pod
            
   Pulled     17s   kubelet            Container image "imranvisualpath/freshtomapp:V7" already present on machine
   Created    17s   kubelet            Created container vproapp-container
   Started    17s   kubelet            Started container vproapp-container
   
   
============================== Commands ===========================

kubectl create -f nginx.yml
kubectl get po
kubectl describe po "pod name"
kubectl get po kube-pod -o yaml                   # get yaml file 
kubectl get po kube-pod -o yaml >pod.yml          # save yaml file to other file
kubectl edit po kube-pod


kubectl to use .kube/config file to connetc to the cluster.

kubectl get no
kubectl describe no "nodename"
kubectl get no "nodename" -o yaml










